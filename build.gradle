plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.4.1"
    id ("com.google.cloud.tools.jib") version "3.2.1"
}


version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

ext {
    set('micronoutOpenApiVersion', '4.4.1')
    set('mapStructVersion',  '1.5.2.Final')
    set('commonsCollections4Version', '4.4')
    set('lombokMapStructBinding', '0.1.0')
    set('archunitVersion', '0.14.1')
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBinding}"
    annotationProcessor "io.micronaut.openapi:micronaut-openapi:${micronoutOpenApiVersion}"


    compileOnly 'org.projectlombok:lombok'

    implementation("io.swagger.core.v3:swagger-annotations")
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("jakarta.persistence:jakarta.persistence-api:2.2.3")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation")
    implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"
    implementation("jakarta.persistence:jakarta.persistence-api:3.0.0")

    runtimeOnly("com.h2database:h2")
    runtimeOnly("ch.qos.logback:logback-classic")

}


application {
    mainClass.set("com.example.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

jib {

}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("jetty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

jib {
    to {
        image = DOCKER_IMAGE_URL
        tags = ["latest"]

        auth {
            username = DOCKER_USERNAME
            password = DOCKER_PASSWORD
        }
    }
    container {
        jvmFlags = [
                "-Djava.security.egd=file:/dev/./urandom",
                "-Dfile.encoding=UTF-8",
                "-Dlogback.debug=true",
                "-XX:+UnlockDiagnosticVMOptions",
                "-XX:+HeapDumpOnOutOfMemoryError",
                "-XX:HeapDumpPath=/tmp/dump.hprof",
                "-XX:MaxMetaspaceSize=256m"
        ]
        ports = ["5000"]
    }
}